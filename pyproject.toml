[project]
name = "kubeflow"
dynamic = ["version"]
requires-python = ">=3.9"
authors = [
  { name = "The Kubeflow Authors", email = "kubeflow-discuss@googlegroups.com" },
]
license = "Apache-2.0"
license-files = ["LICENSE"]
description = "Kubeflow Python SDK to manage ML workloads and to interact with Kubeflow APIs."
readme = "README.md"
keywords = ["kubeflow", "trainer", "model training", "llm", "ai"]
classifiers = [
  "Intended Audience :: Developers",
  "Intended Audience :: Education",
  "Intended Audience :: Science/Research",
  # TODO (andreyvelich): Check Python version for Kubeflow Trainer.
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "License :: OSI Approved :: Apache Software License",
  "Operating System :: OS Independent",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
  "kubernetes>=27.2.0",
  "pydantic>=2.10.0",
  "kubeflow-trainer-api>=2.0.0",
]

[dependency-groups]
dev = [
  "pytest>=7.0",
  "pytest-mock>=3.10",
  "coverage>=7.0",
  "kubeflow_trainer_api@git+https://github.com/kubeflow/trainer.git@master#subdirectory=api/python_api",
  "ruff>=0.12.2",
  "pre-commit>=4.2.0",
  "PyGithub>=2.7.0",
  "git-cliff>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/kubeflow/sdk"
Documentation = "https://www.kubeflow.org/docs/components"
Source = "https://github.com/kubeflow/sdk"

[tool.hatch.version]
path = "kubeflow/__init__.py"

[tool.uv]
package = true

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

# ruff configuration
[tool.ruff]
# Formatting + lint coordination
line-length = 100
target-version = "py39"
src = ["kubeflow"]
extend-exclude = [
  ".venv", "venv", "build", "dist", "__pycache__", "docs/_build"
]

[tool.ruff.format]
# Use Ruff as the formatter (Black-compatible)
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
docstring-code-format = true
docstring-code-line-length = 100

[tool.ruff.lint]
# Sensible, low-noise default rule set for a library:
select = [
  "F",   # pyflakes
  "E",   # pycodestyle
  "W",   # warnings
  "I",   # isort (imports order)
  "UP",  # pyupgrade
  "N",   # pep8-naming
  "B",   # flake8-bugbear
  "C4",  # flake8-comprehensions
  "SIM"  # flake8-simplify
]

ignore = [
  "B006"  # mutable-argument-default
]


[tool.ruff.lint.isort]
# Make import sorting deterministic and "first-party aware"
known-first-party = ["kubeflow"]
combine-as-imports = true
force-sort-within-sections = true
